load_module /usr/lib/nginx/modules/ngx_http_cache_purge_module_torden.so;
events {
    worker_connections 1024;
}

http {
    server_names_hash_bucket_size 128;
    log_format main '$time_local | $status | $request_time (s)| $remote_addr | $request';
    log_format banjax_next_format '$msec $remote_addr $request_method $host $request $http_user_agent';
    log_format logstash_format '$remote_addr $remote_user [$time_local] "$request" $scheme $host $status $bytes_sent "$http_user_agent" $upstream_cache_status $content_type $hostname $request_time $scheme://$host$uri "$http_referer" "$http_x_forwarded_for"';
    log_format  json_combined escape=json
                '{'
                    '"time_local":"$time_local",'
                    '"remote_addr":"$remote_addr",'
                    '"request_host":"$host",'
                    '"request_uri":"$request_uri",'
                    '"ngx_status": "$status",'
                    '"ngx_body_bytes_sent": "$body_bytes_sent",'
                    '"ngx_upstream_addr": "$upstream_addr",'
                    '"ngx_upstream_cache_status": "$upstream_cache_status",'
                    '"ngx_upstream_response_time": "$upstream_response_time",'
                    '"ngx_request_time": "$request_time",'
                    '"http_referrer": "$http_referer",'
                    '"http_user_agent": "$http_user_agent",'
                '}' ;
    error_log /dev/stdout warn;
    access_log /var/log/nginx/access.log json_combined;
    access_log /var/log/banjax-next/banjax-next-format.log banjax_next_format;
    access_log /var/log/banjax-next/nginx-logstash-format.log logstash_format;
    proxy_cache_path /data/nginx/auth_requests_cache keys_zone=auth_requests_cache:10m;
    proxy_cache_path /data/nginx/site_content_cache keys_zone=site_content_cache:10m max_size=50g;

    map "" $empty {
        default "";
    }

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    server {
        listen 80 default_server;
        listen 443 ssl http2 default_server;
        listen [::]:80 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;
        ssl_ciphers aNULL;
        ssl_certificate data:$empty;
        ssl_certificate_key data:$empty;
        return 444;
    }


    server {
        listen 80;
        server_name 127.0.0.1;
        access_log off;

        location /info {
            return 200 "2021-05-18_16:05:36\n";
        }


        location /stub_status {
            stub_status;
        }
    }


    server {
        listen 80;
        server_name banjax-next;
        access_log off;

        location /info {
            proxy_pass http://127.0.0.1:8081/info;
        }


        location /decision_lists {
            proxy_pass http://127.0.0.1:8081/decision_lists;
        }


        location /rate_limit_states {
            proxy_pass http://127.0.0.1:8081/rate_limit_states;
        }
    }


    server {
        listen 80;
        server_name "cache_purge";
        access_log off;

        location ~ /auth_requests/(.*) {
            allow 127.0.0.1;
            deny all;
            proxy_cache_purge auth_requests_cache $1;
        }


        location ~ /site_content/(.*) {
            allow 127.0.0.1;
            allow all;
            proxy_cache_purge site_content_cache $1;
        }


        location / {
            return 404 "you're looking for /auth_requests/<ip>* or '/site_content/<scheme><site>*'\n";
        }
    }
}
